# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-05-09 23:43
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateAndTimeStart', models.DateTimeField(null=True)),
                ('dateAndTimeEnd', models.DateTimeField(null=True)),
                ('duration', models.DurationField()),
                ('location', models.CharField(blank=True, max_length=200)),
                ('desc', models.TextField(max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='EntryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('requestUser', models.CharField(blank=True, max_length=100, null=True)),
                ('requestPath', models.TextField(blank=True, null=True)),
                ('requestMethod', models.CharField(blank=True, max_length=4, null=True)),
                ('requestSecure', models.NullBooleanField(default=False)),
                ('requestAddress', models.GenericIPAddressField(blank=True, null=True)),
                ('desc', models.CharField(blank=True, max_length=600, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthNetUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=200)),
                ('firstName', models.CharField(max_length=200)),
                ('middleName', models.CharField(blank=True, max_length=200)),
                ('lastName', models.CharField(max_length=200)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('birthDate', models.DateField(blank=True, null=True)),
                ('address', models.CharField(blank=True, max_length=200)),
                ('email', models.EmailField(blank=True, max_length=200)),
                ('phoneNumber', models.CharField(blank=True, max_length=200)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthTest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('date', models.DateField()),
                ('desc', models.TextField(max_length=600)),
                ('results', models.TextField(max_length=600)),
                ('image', models.FileField(blank=True, null=True, upload_to='testimages/')),
                ('released', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('address', models.CharField(max_length=200)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ImportModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload', models.FileField(upload_to='importUploads/')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('createdAt', models.DateTimeField(auto_now_add=True)),
                ('toNotifyUsername', models.CharField(max_length=200)),
                ('desc', models.TextField(blank=True, null=True)),
                ('read', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('dosage', models.CharField(max_length=200)),
                ('notes', models.TextField(max_length=600)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('healthnetuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='recordSystem.HealthNetUser')),
            ],
            options={
                'ordering': ('lastName',),
            },
            bases=('recordSystem.healthnetuser',),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('healthnetuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='recordSystem.HealthNetUser')),
            ],
            options={
                'ordering': ('lastName',),
            },
            bases=('recordSystem.healthnetuser',),
        ),
        migrations.CreateModel(
            name='Nurse',
            fields=[
                ('healthnetuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='recordSystem.HealthNetUser')),
                ('doctors', models.ManyToManyField(related_name='nurseDoctor', related_query_name='nurseDoctors', to='recordSystem.Doctor')),
            ],
            options={
                'ordering': ('lastName',),
            },
            bases=('recordSystem.healthnetuser',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('healthnetuser_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='recordSystem.HealthNetUser')),
                ('healthNumber', models.CharField(max_length=12)),
                ('eyeColor', models.CharField(blank=True, choices=[('Green', 'Green'), ('Blue', 'Blue'), ('Brown', 'Brown'), ('Hazel', 'Hazel'), ('Silver', 'Silver'), ('Amber', 'Amber')], default='BROWN', max_length=8)),
                ('bloodType', models.CharField(blank=True, choices=[('O+', 'O+'), ('O-', 'O-'), ('A+', 'A+'), ('A-', 'A-'), ('B+', 'B+'), ('B-', 'B-'), ('AB+', 'AB+'), ('AB-', 'AB-')], default='O+', max_length=3)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('weight', models.IntegerField(blank=True, null=True)),
                ('emergencyContact', models.TextField(blank=True, max_length=600)),
                ('nurses', models.ManyToManyField(blank=True, related_name='nurses', related_query_name='nurse', to='recordSystem.Nurse')),
                ('primaryCareProvider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='patientsDoctors', related_query_name='patientsDoctor', to='recordSystem.Doctor')),
            ],
            bases=('recordSystem.healthnetuser',),
        ),
        migrations.AddField(
            model_name='notification',
            name='toNotify',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recordSystem.HealthNetUser'),
        ),
        migrations.AddField(
            model_name='healthnetuser',
            name='currentHospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='currentHospital', to='recordSystem.Hospital'),
        ),
        migrations.AddField(
            model_name='healthnetuser',
            name='djangoUser',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='healthnetuser',
            name='hospitals',
            field=models.ManyToManyField(related_name='hospitals', to='recordSystem.Hospital'),
        ),
        migrations.AddField(
            model_name='entrylog',
            name='atHospital',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='atHospital', to='recordSystem.Hospital'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='doctor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doctorPrescribed', to='recordSystem.Doctor'),
        ),
        migrations.AddField(
            model_name='prescription',
            name='prescribedTo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patientPerscriptions', related_query_name='patientPerscription', to='recordSystem.Patient'),
        ),
        migrations.AddField(
            model_name='healthtest',
            name='doctor',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='doctorTested', to='recordSystem.Doctor'),
        ),
        migrations.AddField(
            model_name='healthtest',
            name='patient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='patientTested', to='recordSystem.Patient'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='doctor',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='recordSystem.Doctor'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='patient',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='recordSystem.Patient'),
        ),
    ]
